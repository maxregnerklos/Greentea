name: 'Build Image and Modernize UI'

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**.md'

defaults:
  run:
    shell: pwsh

jobs:
  build-image:
    name: 'Modernize and Build UI'

    strategy:
      matrix:
        system:
          - windows-2022

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Clone Dependencies
        run: |
          git clone --depth 1 https://github.com/hexalang/Hexa.git ../Hexa
          git clone --depth 1 https://github.com/GreenteaOS/Teapot.git ../Teapot
          git clone --depth 1 https://github.com/GreenteaOS/Tofita.git ../Tofita
          git clone --depth 1 https://github.com/GreenteaOS/Tongue.git ../Tongue
          git clone --depth 1 https://github.com/GreenteaOS/NjRAA.git ../NjRAA

      - name: Analyze and Modernize UI
        run: |
          cd ../Tofita/Greentea/Assets

          # Detect and intelligently create changes
          $changes = @()

          # Intelligent Detection Logic
          Get-ChildItem -Recurse -File -Filter '*.html', '*.css', '*.js' | ForEach-Object {
            $filePath = $_.FullName
            $content = Get-Content $filePath -Raw

            # Detect patterns to modernize
            if ($content -match '<button class="btn">') {
              $changes += @{ FilePath = $filePath; Pattern = '<button class="btn">'; Replacement = '<button class="btn btn-primary">' }
            }
            if ($content -match '<img ') {
              $changes += @{ FilePath = $filePath; Pattern = '<img '; Replacement = '<img alt="Image description" ' }
            }
            if ($content -match 'font-family: Arial') {
              $changes += @{ FilePath = $filePath; Pattern = 'font-family: Arial'; Replacement = 'font-family: Roboto, sans-serif' }
            }
            if ($content -match 'color: #000') {
              $changes += @{ FilePath = $filePath; Pattern = 'color: #000'; Replacement = 'color: #333' }
            }
            # Add more detection logic as needed for project modernization
          }

          # Apply detected changes
          foreach ($change in $changes) {
            $filePath = $change.FilePath
            $pattern = $change.Pattern
            $replacement = $change.Replacement

            $fileContent = Get-Content $filePath -Raw
            $fileContent = $fileContent -replace $pattern, $replacement
            Set-Content -Path $filePath -Value $fileContent

            Write-Host "Applied change: [$pattern -> $replacement] in file [$filePath]"
          }

          Write-Host "Modernization complete with ${($changes.Count)} changes applied."

      - name: Build UI
        run: |
          cd ../Tofita/Greentea/Assets

          # Check for a build script
          if (Test-Path "build.bat") {
            cmd.exe /c 'build.bat'
          } else {
            Write-Host "No build script found. Performing default build logic."
            mkdir ../dist
            Copy-Item -Path * -Destination ../dist -Recurse
          }

          Write-Host "UI build complete."

      - name: Prepare Hexa
        run: |
          ../Teapot/node-v18.1.0-win-x64/node --trace-uncaught ../Hexa/bootstrap.js ../Hexa/hexa.json
          ../Teapot/node-v18.1.0-win-x64/node --trace-uncaught ../Hexa/hexa-node.js ../Hexa/hexa.json

      - name: Build Tofita
        run: |
          cd ../Tofita
          $env:Path += ";.\..\Hexa"
          $ErrorActionPreference = 'SilentlyContinue'
          cmd.exe /c 'build.bat'

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: greentea-uefi64-image-${{ github.sha }}
          path: C:\Tea\greenteaos-uefi64.iso
